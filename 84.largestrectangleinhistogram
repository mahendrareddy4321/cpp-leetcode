class Solution {
public:
    int largestRectangleArea(vector<int>& heights) 
    {
        int n = heights.size(); 
        stack<int> st; 
        int ls[n], rs[n];
        for(int i = 0;i<n;i++) 
        {
            while(!st.empty() && heights[st.top()] >= heights[i])
            {
                st.pop(); 
            }
            
            if(st.empty()) 
            {
                ls[i] = 0; 
            }
            else 
            {
                ls[i] = st.top() + 1; 
            }
            st.push(i); 
        }
        while(!st.empty()) 
        {
            st.pop();
        }   
        for(int i = n-1;i>=0;i--) 
        {
            while(!st.empty() && heights[st.top()] >= heights[i]) 
            {
                st.pop(); 
            }
            
            if(st.empty()) 
            {
                rs[i] = n-1; 
            }
            else 
            {
                rs[i] = st.top() - 1;
            }
                
            st.push(i); 
        }
        
        int largeA = 0; 
        int w;
        for(int i = 0;i<n;i++) 
        {
            w= heights[i] * (rs[i] - ls[i] + 1);
            largeA= max(largeA,w);
        }
        return largeA;
    }
};
